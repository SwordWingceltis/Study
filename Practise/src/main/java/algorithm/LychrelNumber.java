package algorithm;

/**
* @Description:  利克瑞尔数
 * 将47倒序并相加得到47 + 74 = 121，是一个回文数。
 *
 * 不是所有的数都能像这样迅速地变成回文数。例如，
 *
 * 349 + 943 = 1292
 * 1292 + 2921 = 4213
 * 4213 + 3124 = 7337
 *
 * 也就是说，349需要迭代三次才能变成回文数。
 *
 * 尽管尚未被证实，但有些数，例如196，被认为永远不可能变成回文数。如果一个数永远不可能通过倒序并相加变成回文数，就被称为利克瑞尔数。出于理论的限制和问题的要求，在未被证否之前，我们姑且就认为这些数确实是利克瑞尔数。除此之外，已知对于任意一个小于一万的数，它要么在迭代50次以内变成回文数，要么就是没有人能够利用现今所有的计算能力将其迭代变成回文数。事实上，10677是第一个需要超过50次迭代变成回文数的数，这个回文数是
 * 4668731596684224866951378664（53次迭代，28位数）。
 *
 * 令人惊讶的是，有些回文数本身也是利克瑞尔数数；第一个例子是4994。
 *
 * 小于一万的数中有多少利克瑞尔数？
* @Param:
* @return:
* @Author: jian.tan
* @Date: 2020/11/26
*/
public class LychrelNumber {
}
